[build-system]
requires = ["setuptools>=65", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "PINNICLE"
dynamic = ["version"]
description = "A Python library for solving ice sheet modeling problems using Physics Informed Neural Network"
readme = "README.md"
license = {file = "LICENSE.txt"}
authors = [
{ name = "Cheng Gong", email = "gong.cheng@dartmouth.edu" },
{ name = "Mansa Krishna", email = "mansa.krishna.gr@dartmouth.edu" },
{ name = "Mathieu Morlighem", email = "Mathieu.Morlighem@dartmouth.edu" },
]
requires-python = ">=3.9"
keywords = [
  "Ice sheet modeling",
  "Numerical method",
  "Deep learning",
  "Physics-informed neural networks"
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "numpy",
  "scipy",
  "scikit-learn",
  "tensorflow>=2.11.0",
  "tensorflow-probability[tf]>=0.19.0 ",
  "matplotlib",
  "pandas",
  "mat73",
  "deepxde",
]

[project.urls]
Homepage = "https://github.com/ISSMteam/PINNICLE"
Documentation = "https://pinnicle.readthedocs.io"
"Bug Tracker" = "https://github.com/ISSMteam/PINNICLE/issues"

[tool.setuptools.packages.find]
where = ["."]
exclude = ["DATA", "Models", "docs*", "examples*"]


[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
  # 1. Comments to turn coverage on and off:
  "no cover: start(?s:.)*?no cover: stop",
  # Don't complain about missing debug-only code:
  "def __repr__",
  "if self\\.debug",

  # Don't complain if tests don't hit defensive assertion code:
  "raise AssertionError",
  "raise NotImplementedError",

  # Don't complain about abstract methods, they aren't run:
  "@(abc\\.)?abstractmethod",

  # Don't complain pytest.mark.skip:
  "@pytest.mark.skip",
]

ignore_errors = true
